name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
  # Publish `v1.2.3` tags as releases.
  # tags:
  #   - v*
  # # Run tests for any PRs.
  # pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  init-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Use Node.js 12.20.1
        uses: actions/setup-node@v1
        with:
          node-version: '12.20.1'
      - name: Install yarn and run test
        run: |  
          yarn
          yarn test

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build-publish:
    # Ensure test job passes before pushing image.
    needs: init-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Pacakges
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare Container tagging
        id: prep
        run: |
          DOCKER_IMAGE=robincher/bluesky-react-sample-app
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     pull: true
      #     push: true
      #     cache-from: type=registry,ref=myorg/bluesky-react-sample-app:latest
      #     cache-to: type=inline
      #     tags: myorg/myrepository:latest
      # - name: Build container image
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #     registry: docker.pkg.github.com
      #     repository: ${{ github.repository }}/bluesky-react-sample-app
      #     tag_with_sha: true
      #     tag_with_ref: true
      
